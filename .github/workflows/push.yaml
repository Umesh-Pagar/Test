name: Push to feature branch

on:
  push:
    branches:
    - 'f-*'
    - 'main'

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  TF_LOG: INFO
  TF_INPUT: false

jobs: 
  check-code:
    runs-on: ubuntu-latest
    defaults:
        run:
          shell: bash
          working-directory: ./wrapper
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4.1.5

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3

      # - name: Configure Git 
      #   run: |
      #     echo "machine github.com login username password ${GH_TOKEN}" > ~/.netrc
      #     git config --global url."https://github.com/ingenovishealth".insteadOf "git://github.com/ingenovishealth"
      #     git config --global advice.detachedHead false
      #   env:
      #     GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        id: init
          #terraform init -backend-config="..\environments\main\backend.json"   
        run: terraform init -backend-config="../environments/prod/backend.json"

      # Run a terraform plan
      - name: Terraform Plan
        id: plan
        run: terraform plan -var-file="../environments/prod/prod.tfvars" -out tfplan -no-color

      # Run a terraform plan
      - name: Terraform Apply
        id: apply
        run: terraform apply -var-file="../environments/prod/prod.tfvars" -auto-approve


  

      
